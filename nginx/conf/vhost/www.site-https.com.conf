server {
    listen 80;
    server_name  www.site-https.com site-https.com;
    root /usr/local/nginx/html/site-https;
    index index.php index.html index.htm;
    return 301 https://$server_name$request_uri;
    try_files $uri $uri/ /index.php?$query_string;

    location ~ \.php$ {
        index index.php;
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
server {
    listen       443 default_server ssl;
    server_name  www.site-https.com site-https.com;

    root /usr/local/nginx/html/site-https;
    index index.php index.html index.htm;
    try_files $uri $uri/ /index.php?$query_string;

    # HTTPS server
    ssl on;
    # 配置会话超时时间
    ssl_session_timeout  5m;
    # 配置共享会话缓存大小，视站点访问情况设定
    ssl_session_cache    shared:SSL:5m;
    # HSTS策略  HTTP严格传输安全。它允许一个 HTTPS 网站要求浏览器总是通过 HTTPS 来访问
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # 证书文件
    ssl_certificate      /usr/local/nginx/cert/nginx_ssl.pem;
    # 私钥文件
    ssl_certificate_key  /usr/local/nginx/cert/nginx_ssl.key;
    # 启动特定的加密协议
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # 优先采取服务器算法
    ssl_prefer_server_ciphers  on;
    # 定义算法
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    # 减少点击劫持
    #add_header X-Frame-Options DENY;
    # 禁止服务器自动解析资源类型
    add_header X-Content-Type-Options nosniff;
    # 防XSS攻击
    add_header X-Xss-Protection 1;

    location ~ \.php$ {
        index index.php;
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

}